// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

  define(['spectrum/Renderer'], function(Renderer) {
    var Destijl;
    return Destijl = (function(superClass) {
      extend(Destijl, superClass);

      function Destijl() {
        return Destijl.__super__.constructor.apply(this, arguments);
      }

      Destijl.prototype.init = function() {
        this.bg = "#ffffff";
        return this.circle_shapes = [];
      };

      Destijl.prototype.step = function() {
        var c, i, len, ref, results;
        console.log(this.stepCount);
        if (this.stepCount === 0 || modulo(this.stepCount, 120) === 0) {
          this.circle_shapes.push({
            radius: 100,
            alpha: 0.01
          });
        }
        ref = this.circle_shapes;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          c = ref[i];
          c.radius += 1;
          if (c.alpha * 1.02 <= 1.0) {
            results.push(c.alpha *= 1.02);
          } else {
            results.push(void 0);
          }
        }
        return results;
      };

      Destijl.prototype.render = function() {
        var c, cx, cy, i, len, ref, results;
        cx = this.width * .5;
        cy = this.height * .5;
        ref = this.circle_shapes;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          c = ref[i];
          this.alpha(c.alpha);
          this.color("#ff0000");
          results.push(this.circle(cx, cy, c.radius, false));
        }
        return results;
      };

      return Destijl;

    })(Renderer);
  });

}).call(this);
